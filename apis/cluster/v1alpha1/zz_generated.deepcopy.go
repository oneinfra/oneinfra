// +build !ignore_autogenerated

/**
 * Copyright 2021 Rafael Fernández López <ereslibre@ereslibre.es>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 **/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	commonv1alpha1 "github.com/oneinfra/oneinfra/apis/common/v1alpha1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateAuthorities) DeepCopyInto(out *CertificateAuthorities) {
	*out = *in
	if in.APIServerClient != nil {
		in, out := &in.APIServerClient, &out.APIServerClient
		*out = new(commonv1alpha1.Certificate)
		**out = **in
	}
	if in.CertificateSigner != nil {
		in, out := &in.CertificateSigner, &out.CertificateSigner
		*out = new(commonv1alpha1.Certificate)
		**out = **in
	}
	if in.Kubelet != nil {
		in, out := &in.Kubelet, &out.Kubelet
		*out = new(commonv1alpha1.Certificate)
		**out = **in
	}
	if in.KubeletClient != nil {
		in, out := &in.KubeletClient, &out.KubeletClient
		*out = new(commonv1alpha1.Certificate)
		**out = **in
	}
	if in.EtcdClient != nil {
		in, out := &in.EtcdClient, &out.EtcdClient
		*out = new(commonv1alpha1.Certificate)
		**out = **in
	}
	if in.EtcdPeer != nil {
		in, out := &in.EtcdPeer, &out.EtcdPeer
		*out = new(commonv1alpha1.Certificate)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateAuthorities.
func (in *CertificateAuthorities) DeepCopy() *CertificateAuthorities {
	if in == nil {
		return nil
	}
	out := new(CertificateAuthorities)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworking) DeepCopyInto(out *ClusterNetworking) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworking.
func (in *ClusterNetworking) DeepCopy() *ClusterNetworking {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworking)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	if in.CertificateAuthorities != nil {
		in, out := &in.CertificateAuthorities, &out.CertificateAuthorities
		*out = new(CertificateAuthorities)
		(*in).DeepCopyInto(*out)
	}
	if in.EtcdServer != nil {
		in, out := &in.EtcdServer, &out.EtcdServer
		*out = new(EtcdServer)
		(*in).DeepCopyInto(*out)
	}
	if in.APIServer != nil {
		in, out := &in.APIServer, &out.APIServer
		*out = new(KubeAPIServer)
		(*in).DeepCopyInto(*out)
	}
	if in.VPN != nil {
		in, out := &in.VPN, &out.VPN
		*out = new(VPN)
		(*in).DeepCopyInto(*out)
	}
	if in.JoinKey != nil {
		in, out := &in.JoinKey, &out.JoinKey
		*out = new(commonv1alpha1.KeyPair)
		**out = **in
	}
	if in.JoinTokens != nil {
		in, out := &in.JoinTokens, &out.JoinTokens
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Networking != nil {
		in, out := &in.Networking, &out.Networking
		*out = new(ClusterNetworking)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	if in.ClientCertificates != nil {
		in, out := &in.ClientCertificates, &out.ClientCertificates
		*out = make(map[string]commonv1alpha1.Certificate, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.StorageClientEndpoints != nil {
		in, out := &in.StorageClientEndpoints, &out.StorageClientEndpoints
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.StoragePeerEndpoints != nil {
		in, out := &in.StoragePeerEndpoints, &out.StoragePeerEndpoints
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.VPNPeers != nil {
		in, out := &in.VPNPeers, &out.VPNPeers
		*out = make([]VPNPeer, len(*in))
		copy(*out, *in)
	}
	if in.JoinTokens != nil {
		in, out := &in.JoinTokens, &out.JoinTokens
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(commonv1alpha1.ConditionList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Component) DeepCopyInto(out *Component) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Component.
func (in *Component) DeepCopy() *Component {
	if in == nil {
		return nil
	}
	out := new(Component)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Component) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentHostPortAllocation) DeepCopyInto(out *ComponentHostPortAllocation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentHostPortAllocation.
func (in *ComponentHostPortAllocation) DeepCopy() *ComponentHostPortAllocation {
	if in == nil {
		return nil
	}
	out := new(ComponentHostPortAllocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentList) DeepCopyInto(out *ComponentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Component, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentList.
func (in *ComponentList) DeepCopy() *ComponentList {
	if in == nil {
		return nil
	}
	out := new(ComponentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComponentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentSpec) DeepCopyInto(out *ComponentSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentSpec.
func (in *ComponentSpec) DeepCopy() *ComponentSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentStatus) DeepCopyInto(out *ComponentStatus) {
	*out = *in
	if in.AllocatedHostPorts != nil {
		in, out := &in.AllocatedHostPorts, &out.AllocatedHostPorts
		*out = make([]ComponentHostPortAllocation, len(*in))
		copy(*out, *in)
	}
	if in.ClientCertificates != nil {
		in, out := &in.ClientCertificates, &out.ClientCertificates
		*out = make(map[string]commonv1alpha1.Certificate, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ServerCertificates != nil {
		in, out := &in.ServerCertificates, &out.ServerCertificates
		*out = make(map[string]commonv1alpha1.Certificate, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.InputEndpoints != nil {
		in, out := &in.InputEndpoints, &out.InputEndpoints
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.OutputEndpoints != nil {
		in, out := &in.OutputEndpoints, &out.OutputEndpoints
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(commonv1alpha1.ConditionList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentStatus.
func (in *ComponentStatus) DeepCopy() *ComponentStatus {
	if in == nil {
		return nil
	}
	out := new(ComponentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdServer) DeepCopyInto(out *EtcdServer) {
	*out = *in
	if in.CA != nil {
		in, out := &in.CA, &out.CA
		*out = new(commonv1alpha1.Certificate)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdServer.
func (in *EtcdServer) DeepCopy() *EtcdServer {
	if in == nil {
		return nil
	}
	out := new(EtcdServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIServer) DeepCopyInto(out *KubeAPIServer) {
	*out = *in
	if in.CA != nil {
		in, out := &in.CA, &out.CA
		*out = new(commonv1alpha1.Certificate)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(commonv1alpha1.KeyPair)
		**out = **in
	}
	if in.ExtraSANs != nil {
		in, out := &in.ExtraSANs, &out.ExtraSANs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIServer.
func (in *KubeAPIServer) DeepCopy() *KubeAPIServer {
	if in == nil {
		return nil
	}
	out := new(KubeAPIServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPN) DeepCopyInto(out *VPN) {
	*out = *in
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.CIDR != nil {
		in, out := &in.CIDR, &out.CIDR
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPN.
func (in *VPN) DeepCopy() *VPN {
	if in == nil {
		return nil
	}
	out := new(VPN)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNPeer) DeepCopyInto(out *VPNPeer) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNPeer.
func (in *VPNPeer) DeepCopy() *VPNPeer {
	if in == nil {
		return nil
	}
	out := new(VPNPeer)
	in.DeepCopyInto(out)
	return out
}
